// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gamer.proto

package gamer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMessage) Reset()         { *m = PingMessage{} }
func (m *PingMessage) String() string { return proto.CompactTextString(m) }
func (*PingMessage) ProtoMessage()    {}
func (*PingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d47a420919a329fb, []int{0}
}

func (m *PingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMessage.Unmarshal(m, b)
}
func (m *PingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMessage.Marshal(b, m, deterministic)
}
func (m *PingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMessage.Merge(m, src)
}
func (m *PingMessage) XXX_Size() int {
	return xxx_messageInfo_PingMessage.Size(m)
}
func (m *PingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PingMessage proto.InternalMessageInfo

func (m *PingMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ActionInput struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionInput) Reset()         { *m = ActionInput{} }
func (m *ActionInput) String() string { return proto.CompactTextString(m) }
func (*ActionInput) ProtoMessage()    {}
func (*ActionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d47a420919a329fb, []int{1}
}

func (m *ActionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionInput.Unmarshal(m, b)
}
func (m *ActionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionInput.Marshal(b, m, deterministic)
}
func (m *ActionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionInput.Merge(m, src)
}
func (m *ActionInput) XXX_Size() int {
	return xxx_messageInfo_ActionInput.Size(m)
}
func (m *ActionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionInput.DiscardUnknown(m)
}

var xxx_messageInfo_ActionInput proto.InternalMessageInfo

func (m *ActionInput) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActionInput) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

type ActionOutput struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionOutput) Reset()         { *m = ActionOutput{} }
func (m *ActionOutput) String() string { return proto.CompactTextString(m) }
func (*ActionOutput) ProtoMessage()    {}
func (*ActionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_d47a420919a329fb, []int{2}
}

func (m *ActionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionOutput.Unmarshal(m, b)
}
func (m *ActionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionOutput.Marshal(b, m, deterministic)
}
func (m *ActionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionOutput.Merge(m, src)
}
func (m *ActionOutput) XXX_Size() int {
	return xxx_messageInfo_ActionOutput.Size(m)
}
func (m *ActionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ActionOutput proto.InternalMessageInfo

func (m *ActionOutput) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActionOutput) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PingMessage)(nil), "gamer.PingMessage")
	proto.RegisterType((*ActionInput)(nil), "gamer.ActionInput")
	proto.RegisterType((*ActionOutput)(nil), "gamer.ActionOutput")
}

func init() { proto.RegisterFile("gamer.proto", fileDescriptor_d47a420919a329fb) }

var fileDescriptor_d47a420919a329fb = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4f, 0xcc, 0x4d,
	0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x64, 0xb9, 0xb8, 0x03,
	0x32, 0xf3, 0xd2, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x98, 0x32, 0x53, 0x94, 0x0c, 0xb9, 0xb8, 0x1d, 0x93,
	0x4b, 0x32, 0xf3, 0xf3, 0x3c, 0xf3, 0x0a, 0x4a, 0x4b, 0xd0, 0xa5, 0x85, 0x84, 0xb8, 0x58, 0x52,
	0x12, 0x4b, 0x12, 0x25, 0x98, 0x14, 0x98, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x23, 0x2e, 0x1e,
	0x88, 0x16, 0xff, 0xd2, 0x12, 0x22, 0xf5, 0x18, 0xe5, 0x71, 0xb1, 0xba, 0x83, 0x9c, 0x23, 0x64,
	0xc0, 0xc5, 0x02, 0x72, 0x8e, 0x90, 0x90, 0x1e, 0xc4, 0xad, 0x48, 0x6e, 0x93, 0xc2, 0x22, 0xa6,
	0xc4, 0x20, 0x64, 0xcc, 0xc5, 0x06, 0xb1, 0x0e, 0xae, 0x07, 0xc9, 0xc1, 0x52, 0xc2, 0x28, 0x62,
	0x10, 0x17, 0x29, 0x31, 0x24, 0xb1, 0x81, 0xc3, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x66,
	0xee, 0xb2, 0x20, 0x12, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GamerClient is the client API for Gamer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GamerClient interface {
	Ping(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error)
	Action(ctx context.Context, in *ActionInput, opts ...grpc.CallOption) (*ActionOutput, error)
}

type gamerClient struct {
	cc *grpc.ClientConn
}

func NewGamerClient(cc *grpc.ClientConn) GamerClient {
	return &gamerClient{cc}
}

func (c *gamerClient) Ping(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error) {
	out := new(PingMessage)
	err := c.cc.Invoke(ctx, "/gamer.Gamer/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gamerClient) Action(ctx context.Context, in *ActionInput, opts ...grpc.CallOption) (*ActionOutput, error) {
	out := new(ActionOutput)
	err := c.cc.Invoke(ctx, "/gamer.Gamer/Action", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GamerServer is the server API for Gamer service.
type GamerServer interface {
	Ping(context.Context, *PingMessage) (*PingMessage, error)
	Action(context.Context, *ActionInput) (*ActionOutput, error)
}

func RegisterGamerServer(s *grpc.Server, srv GamerServer) {
	s.RegisterService(&_Gamer_serviceDesc, srv)
}

func _Gamer_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GamerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gamer.Gamer/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GamerServer).Ping(ctx, req.(*PingMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gamer_Action_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GamerServer).Action(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gamer.Gamer/Action",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GamerServer).Action(ctx, req.(*ActionInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gamer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gamer.Gamer",
	HandlerType: (*GamerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Gamer_Ping_Handler,
		},
		{
			MethodName: "Action",
			Handler:    _Gamer_Action_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gamer.proto",
}
